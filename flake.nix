{  description = "A flake for the Summit Hip Numbers media player";  inputs = {    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";    rust-overlay.url = "github:oxalica/rust-overlay";    flake-utils.url = "github:numtide/flake-utils";  };  outputs = { self, nixpkgs, rust-overlay, flake-utils }:    flake-utils.lib.eachDefaultSystem (system:      let        # Rust overlay for easy Rust toolchain management        overlays = [ (import rust-overlay) ];        pkgs = import nixpkgs {          inherit system overlays;        };        # Rust toolchain        rustToolchain = pkgs.rust-bin.stable.latest.default.override {          extensions = [ "rust-src" ];        };        # Common dependencies for both native and cross-compilation        commonDeps = with pkgs; [          pkg-config          gstreamer          gst_all_1.gst-plugins-base          gst_all_1.gst-plugins-good          gst_all_1.gst-plugins-bad          gst_all_1.gst-plugins-ugly        ];      in      {        # Development shell        devShells.default = pkgs.mkShell {          buildInputs = [ rustToolchain ] ++ commonDeps;        };        # Native build        packages.default = pkgs.rustPlatform.buildRustPackage {          pname = "summit_hip_numbers";          version = "0.1.0";          src = ./.;          cargoLock = {            lockFile = ./Cargo.lock;          };          nativeBuildInputs = commonDeps;        };        # Cross-compilation to Windows        packages.windows =          let            pkgs-windows = import nixpkgs {              system = "x86_64-w64-mingw32";              crossSystem = {                config = "x86_64-w64-mingw32";              };            };          in          pkgs.rustPlatform.buildRustPackage {            pname = "summit_hip_numbers-windows";            version = "0.1.0";            src = ./.;            cargoLock = {              lockFile = ./Cargo.lock;            };            # Use the Windows toolchain            toolchain = pkgs.rust-bin.stable.latest.default.override {              targets = [ "x86_64-pc-windows-gnu" ];            };            # GStreamer dependencies for Windows            nativeBuildInputs = with pkgs-windows; [              pkg-config              gstreamer              gst_all_1.gst-plugins-base              gst_all_1.gst-plugins-good              gst_all_1.gst-plugins-bad              gst_all_1.gst-plugins-ugly            ];          };      });}