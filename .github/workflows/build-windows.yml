name: Build Windows Distribution

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  # Define the MSYS2 installation directory for later use
  MSYS2_INSTALL_DIR: C:\msys64
  # Inno Setup Version
  INNO_SETUP_VERSION: 6.2.2

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up MSYS2 and GStreamer dependencies
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: >-
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-pkg-config
          mingw-w64-x86_64-glib2
          mingw-w64-x86_64-gstreamer
          mingw-w64-x86_64-gst-plugins-base
          mingw-w64-x86_64-gst-plugins-good
          mingw-w64-x86_64-gst-plugins-bad
          mingw-w64-x86_64-gst-plugins-ugly
        update: true
        path-type: inherit

    # Explicitly install and use the GNU toolchain for Rust to match MSYS2 libraries
    - name: Set up Rust (GNU toolchain)
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable-x86_64-pc-windows-gnu

    - name: Build Application
      shell: msys2 {0}
      env:
        # Explicitly tell pkg-config and the Rust linker where to find the GStreamer files
        PKG_CONFIG_PATH: /mingw64/lib/pkgconfig
        RUSTFLAGS: -L native=/mingw64/lib
      run: cargo build --release --verbose

    - name: Download and Install Inno Setup
      shell: pwsh
      run: |
        $inno_url = "https://files.jrsoftware.org/is/6/innosetup-${{ env.INNO_SETUP_VERSION }}.exe"
        $inno_path = "${{ runner.temp }}\innosetup.exe"
        Write-Host "Downloading Inno Setup from $inno_url"
        Invoke-WebRequest -Uri $inno_url -OutFile $inno_path
        Write-Host "Installing Inno Setup..."
        Start-Process -FilePath $inno_path -ArgumentList "/SP- /VERYSILENT /SUPPRESSMSGBOXES /NOCANCEL /NORESTART" -Wait
        $inno_dir = "C:\Program Files (x86)\Inno Setup 6"
        Write-Host "Adding '$inno_dir' to GITHUB_PATH"
        echo $inno_dir >> $env:GITHUB_PATH

    - name: Run Build Script to Create Distribution
      shell: pwsh
      # Pass the GStreamer path and SkipBuild flag to the build script
      run: ./build_windows.ps1 -SkipBuild -GStreamerPath "${{ env.MSYS2_INSTALL_DIR }}\mingw64"

    - name: Upload Portable Application as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: summit-hip-numbers-windows-portable
        path: summit_hip_numbers_portable.zip
        
    - name: Upload Installer as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: summit-hip-numbers-windows-installer
        path: dist/summit_hip_numbers_installer.exe