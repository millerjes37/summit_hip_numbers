name: Build & Release

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  release:
    types: [published]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: macos
          - os: windows-latest
            platform: windows

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - uses: dtolnay/rust-toolchain@stable

      - uses: Swatinem/rust-cache@v2

      # xtask handles all dependencies - FFmpeg download, cross-compilation, etc.
      - name: Build distributions
        run: cargo xtask dist --platform ${{ matrix.platform }}

      # Upload all archives from dist/
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-dist
          path: |
            dist/*.zip
            dist/*.tar.gz
            dist/*.dmg
          retention-days: 30

  # Create release if this is a tag
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release files
        run: |
          mkdir release
          find artifacts -type f \( -name "*.zip" -o -name "*.tar.gz" -o -name "*.dmg" \) -exec cp {} release/ \;
          ls -lh release/

      - name: Upload to release
        uses: softprops/action-gh-release@v2
        with:
          files: release/*
          generate_release_notes: true
